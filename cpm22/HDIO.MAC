; FILE :  HDIO.MAC
;
;	HOLBORN HARD DISK IO FOR CP/M 2.2
;
;			HB	10061982
;			HB	11101982
;
 
;HARD_ASM.S
	GLOBAL	HDCT0I
	GLOBAL	HDCT1I
	GLOBAL	HDCT2I
	GLOBAL	HDCT3I
	GLOBAL	HDREAD
	GLOBAL	HDWRITE
	GLOBAL	HDINIT
	GLOBAL	HDHOME
;
	GLOBAL	HDLEIN
	GLOBAL	INDRBL
	GLOBAL	HDREDX
	GLOBAL	HCOMCM
	GLOBAL	HDCOMD
;
	GLOBAL	HDMAIP
	GLOBAL	HDSECT
	GLOBAL	PTRINI
;
	GLOBAL	HDRVUN
	EXTRN	HDAVBL
;
	EXTRN	FDCTRK
	EXTRN	FDCADR
	EXTRN	FDCLEN
	EXTRN	FDCBAS
	EXTRN	PHUNIT
;
	EXTRN	HDDMVC
	EXTRN	HDCTVC
;
	EXTRN	PRMSG
;
	EXTRN	HSTWRT
	EXTRN	HSTACT
	EXTRN	DPBASE
	EXTRN	COLDFL
;
;
;
;
	.Z80
;
;
OWNBAS	EQU	100H
DMAREG	EQU	4
HDSTAD	EQU	40H	; STATUS
HDSLTD	EQU	44H	; SELECT
HDRST	EQU	48H	; RESET
HDDTDV	EQU	4CH	; DATA
HDINOT	EQU	50H	; INOUT
HDSLDR	EQU	54H	; HARD DISK SELECT DATA REGISTER
HDCTDV	EQU	58H	; CTC
HDCT0D	EQU	58H	; CTC0
HDCT1D	EQU	5AH	; CTC1
HDCT2D	EQU	59H	; CTC2
HDCT3D	EQU	5BH	; CTC3
HDDMDV	EQU	5CH	; DMA
;
LOGADH	EQU	1
LOGADM	EQU	2
LOGADL	EQU	3
;
DMAINP	EQU	79H
DMAOUT	EQU	7DH
;
HRDCOD	EQU	08H
HWRCOD	EQU	0AH
HIDRVC	EQU	0CH
HTSTDR	EQU	0
HRECAL	EQU	01
HRQSST	EQU	03
;
;
IOINCM	EQU	3	; INPUT COMMAND
IOINDT	EQU	1	; INPUT DATA
IOOTCM	EQU	2	; OUTPUT COMMAND
IOOTDT	EQU	0	; OUTPUT DATA
;
IOPISC	EQU	8	; PERMIT INTERRUPT ON STATUS CHANGE
IOPIBC	EQU	10H	; PERMIT INTERRUPT ON BUSY   FALSE
IOPIRC	EQU	20H	; PERMIT INTERRUPT ON REQUEST CHANGE
 
IORQNT	EQU	4	; SELECT REQ. INT ON FALSE.
;
ANTCYL	EQU	0
ANTHED	EQU	2
REDUC	EQU	3
PRECOM	EQU	5
ECCLEN	EQU	7
;
ERRREP	EQU	33H
TIMCOD	EQU	044H
 
BUSYBIT	EQU	0
IOBIT	EQU	2
;IO OUTPUT CONTROL BYTE
;
;------------------------------------------------------------------------------
;DB0 DB1 DB2 DB3 DB4 DB5 I   OUTPUT DATA BITS VIA "IOINOT" DEVICE
;------------------------------------------------------------------------------
; 0   0                  I   OUTPUT DATA   
; 0   1                  I   OUTPUT COMMAND
; 1   0                  I   INPUT DATA   
; 1   1                  I   INPUT COMMAND
;         0              I   POS EDGE ON REQ = TRUE
;         1              I   POS EDGE ON REQ = FALSE
;             1          I   INTERRUPT ON STATUS CHANGE
;                 1      I   INTERRUPT ON BUSY GO'S FALSE
;                      1 I   INTERRUPT ON SELECTED REQ. CHANGE
;
;------------------------------------------------------------------------------
;
;HARD DISK STATUS BITS
;
;------------------------------------------------------------------------------
;BIT 3 2 1 0                 MSG  IO  CD  BUSY
;------------------------------------------------
;COMMAND OUTPUT (TO DRIVE)    1    1   0   0
;
;COMMAND INPUT  (FROM DRIVE)  1    0   0   0
;
;DATA OUTPUT    (TO DRIVE)    1    1   1   0 
;
;DATA INPUT     (FROM DRIVE)  1    0   1   0
;------------------------------------------------
; 
;HARD DISK INITIATIE
;
HDINIT:
	CALL	INITIA
;
; CHECK COLD BOOT ?
;
	LD	A,(COLDFL)
	AND	A		; C:=0
	RET	Z		; A=0
;
	CALL	INIDRV
	RET	NC
	CALL	INIDRV		; TRY ONCE MORE
	RET	NC
	LD	HL,HDMSG1
	CALL	PRMSG
	LD	A,0FFH
	SCF		; C:= 1
	RET
HDMSG1:
	DEFB	0AH,0DH
	DEFB	'HARD DISK INITIALISATION ERROR'
	DEFB	0AH,0DH
	DEFB	0		; EOT CHAR.
;
INITIA:
 
	DI
	XOR	A
	OUT	(HDINOT),A
	LD	HL,OWNBAS
	LD	(HDOWNB),HL
	CALL	DMINI
	CALL	CTCINI
	EI
	RET
;
; INITIEER HARD DISK
;		PHUNIT MUST BE FILLED
;
INIDRV:
	LD	A,1		; NO ERROR PROC DURING START UP
	LD	(ERFLAG),A
	CALL	SETUPD	; FILL INIDRV BLOCK
	CALL	HDREST	; RESET HARD DISK
;
; SELECT DISK BEFORE STARTING UP
;
	LD	HL,0FFFFH
INIDR1:
	LD	A,H
	OR	L
	SCF		; IN CASE OF ERROR
	RET	Z	; HARD WARE ERROR
	CALL	HDSELT	; TRY TO SELECT
	JR	C,INIDR1	; NOT YET SUCCESFULL
;
; WAIT NOW FOR REQUEST READY
;	AND STATUS = COMMAND OUTPUT
;
	LD	D,0CH		; COMMAND OUTPUT
	CALL	HCHKST
	RET	C		; HARD WARE ERROR
; INITIATE CONTROLER FOR SPECIFIC DRIVE
;
INIDRC:
	CALL	SETDRV
	RET	C

;
; INITIATE/RECALIBRATE DRIVE UNITS
;
	LD	A,(HDAVBL)
	AND	A
	RET	Z		; NO HARDDISK AVAILEBLE
	DEC	A
	CALL	HDRIPR		; HARD DISK DRIVE INIT PROC
	RET	C
	LD	A,(HDRVUN)
	DEC	A
	JP	NZ,INDRC1	; NO MORE UNITS
	CALL	HDRIPR
	RET	C
INDRC1:
	XOR	A		; A:= 0
	LD	(ERFLAG),A
	RET
HDRIPR:
	LD	(HDRVUN),A
	CALL	TSTDRV		; TEST IF DRIVE IS READY
	RET	C
	CALL	HDHOME		; RECALIBRATE
	RET
;
;
 
;
; INITIATE DISK PROCEDURE
;
SETDRV:
	LD	HL,(FDCBAS)
	LD	(HDSBAS),HL
	LD	HL,(FDCLEN)
	LD	(HDSLEN),HL
	LD	HL,(FDCADR)
	LD	(HDSADR),HL
	LD	A,(HDCOMD)
	LD	(HDSHDC),A
 
	LD	HL,(HDOWNB)
	LD	(FDCBAS),HL
	LD	HL,INDRBL	; DATA ADRES
	LD	(FDCADR),HL
 
	LD	HL,8
	LD	(FDCLENG),HL	; LENGTE
 
	LD	A,HIDRVC
	LD	(HDCOMD),A
 
	CALL	HDWRTX
	LD	HL,(HDSBAS)
	LD	(FDCBAS),HL
	LD	HL,(HDSLEN)
	LD	(FDCLEN),HL
	LD	HL,(HDSADR)
	LD	(FDCADR),HL
	LD	A,(HDSHDC)
	LD	(HDCOMD),A
 
	RET
 
;
; RESET DRIVE
;
HDREST:
	OUT	(HDRST),A
	RET
;
; RECALIBRATE
;
 
HDHOME:
	LD	A,(HDCOMD)
	LD	(HDHCMD),A
	LD	A,HRECAL
	LD	(HDCOMD),A
	CALL	HCOMCM
	PUSH	AF		; SAVE CY
	LD	A,(HSTWRT)
	OR	A
	JR	NZ,HDHOM1
	LD	(HSTACT),A
HDHOM1:
	LD	A,(HDHCMD)
	LD	(HDCOMD),A
 
	POP	AF
	LD	A,0
	RET	NC		; NO ERROR
	LD	A,0FFH
	RET
;
;	RET
;
;
;
;TEST DRIVE READY
;
TSTDRV:
	LD	HL,0FFFH
	LD	(TSDRTR),HL	; RETRY COUNTER
TSTDR1:
	LD	A,HTSTDR	; DRIVE READY COMMAND
	LD	(HDCOMD),A
 
	CALL	HCOMCM		; COMMEN COMMAND TRANSFER
 
	RET	NC		; OKE
 
	LD	HL,(TSDRTR)
	DEC	HL
	LD	(TSDRTR),HL
	LD	A,H
	OR	L
	JP	NZ,TSTDR1
TSTDR2:
	SCF
	RET
;H COMMENN COMMAND TRANSFER PROCEDURE
;
;
; INPUT: HDCOMD = HARD DISK COMMAND CODE
;
HCOMCM:
	LD	A,3
	LD	(HDRETR),A
HCOMC1:
	CALL	HDCTPR		; EXECUTE COMMAND
	RET	NC		; OKE, EXIT
	CALL	HDERRP		; START ERROR PROCEDURE
	RET	C		; HARD WARE ERROR
	LD	A,(HDRETR)
	DEC	A
	LD	(HDRETR),A
	JR	NZ,HCOMC1
	SCF
	RET
 
;
; COMMEN COMMAND SINGLE PROCEDURE
;			WTTIME MUST BE FILLED
;
HDCTPR:
	CALL	HDCCOT		; SELECT + COMMAND OUT
	RET	C
 
	JP	HDCCIN		; COMMAND IN (STATUS)
;	RET
; READ WRITE PROC'S
;
;HARD DISK READ PROCEDURE
;
HDREAD:
	LD	A,HRDCOD	;HARD DISK READ CODE
	LD	(HDCOMD),A	;HARD DISK COMMAND
HDREDX:
	LD	A,DMAINP	; DMA INPUT COMMAND
	LD	(HDDCMD),A	;HARD DISK  DMA COMMAND
 
	LD	A,IOINDT+IOPIBC+IOPISC	; INPUT DATA
	LD	(HDIOCM),A
	CALL	HDRWCP		; HARD DISK READ WRITE COMMEN PROC.
	LD	A,0
	RET	NC
	LD	A,0FFH
	RET
 
;
;HARD DISK WRITE PROCEDURE
;
HDWRIT:
	LD	A,HWRCOD	;HARD DISK WRITE CODE
	LD	(HDCOMD),A	;HARD DISK COMMAND
HDWRTX:
	LD	A,DMAOUT	;DMA OUTPUT COMMAND
	LD	(HDDCMD),A	;HARD DISK DMA COMMAND
 
	LD	A,IOOTDT+IOPIBC+IOPISC	; OUTPUT DATA
	LD	(HDIOCM),A
 
	CALL	HDRWCP		; HARD DISK READ WRITE PROC.
	LD	A,0
	RET	NC
	LD	A,0FFH
	RET

 
; READ WRITE
;
;HARD DISK READ WRITE COMMEN PROCEDURE
;
 
HDRWCP:
	LD	A,3
	LD	(HDRETR),A
HDRWC1:
	CALL	HDRWP
	RET	NC		; OKE
	CALL	HDERRP		; ERROR PROCEDURE
	RET	C		; HARD WARE FAILURE
	LD	A,(HDRETR)
	DEC	A
	LD	(HDRETR),A
	JR	NZ,HDRWC1
	SCF
	RET			; ERROR EXIT
 
;
; SINGLE READ WRITE COMMEN PROC
;
HDRWP:
	LD	A,(FDCLENG+1)	; UPPER BYTE !!!
	LD	(HDLEIN),A	; LENGTE ,INTERLEAVE
 
	CALL	HDCCOT
	RET	C
	CALL	HDDATT		;HARD DISK DATA TRANSFER
	RET	C
	JP	HDCCIN
;	RET
;
; COMMAND PHASE
;
; COMMAND PHASE
;
HDCCOT:
 
	CALL	HDSELT
	RET	C
 
;
; HARD DISK COMMEN COMMAND OUTPUT
;
HDCMDO:
	CALL	LGTRAN		;UNIT+TRACK+SECTOR==>DCB1,2,3
	LD	A,(HDCOMD)
	LD	(DCBBLK+DCB0),A	; COMMAND CODE
 
	LD	A,(HDLEIN)
	LD	(DCBBLK+DCB4),A	; LENGTE OF INTERLEAVE
 
	LD	A,(INDRBL+OPTBYT)
	LD	(DCBBLK+DCB5),A	; OPTION + RETRY
 
	LD	D,0CH		; COMMAND OUTPUT
	CALL	HCHKST
	RET	C
	JP	HDCMOT
;	RET
; RESULT PHASE
;
; RESULT PHASE
;
HDCCIN:
	LD	D,08H		; COMMAND INPUT
	CALL	HCHKST		; CHECK STATUS
	RET	C		; ERROR
	CALL	HDCMIN		;COMMAND INPUT
	RET	C
	LD	A,(HDSTAT)	; CHECK STATUS
	BIT	1,A		; TEST BIT 1 ONLY
	RET	Z		; Z=0 => C=0 = OKE
	SCF
	RET			; ERROR RETURN
; COMMEN PROC'S
 
;
; HARD DISK COMMAND OUTPUT
;
HDCMOT:
	LD	HL,OWNBAS
	CALL	SETBAS
	LD	HL,DCBBLK	; ADDRESS
	LD	BC,6		; LENGTE
	LD	D,DMAOUT	; DMA OUTPUT COMMAND
	LD	E,IOOTCM+IOPIBC+IOPISC	; OUTPUT COMMAND
	JP	HDCOMO		; COMMEN PART
;
; HARD DISK COMMAND INPUT
;
HDCMIN:
	LD	HL,OWNBAS
	CALL	SETBAS
 
	LD	HL,HDSTAT	; ADDRESS
	LD	BC,2
 
	LD	D,DMAINP	; DMA INPUT COMMAND
	LD	E,IOINCM+IOPISC	; INPUT COMMAND
 
	JP	HDCOMO		; COMMEN PART
 
;
; HARD DISK DATA TRANSFER
;
HDDATT:
	LD	HL,(FDCBAS)
	CALL	SETBAS
 
	LD	HL,(FDCADR)	; 
	LD	BC,(FDCLENG)
	LD	A,(HDDCMD)
	LD	D,A
	LD	A,(HDIOCM)
	LD	E,A
	JP	HDCOMO		; COMMEN PART
 
;
SETBAS:
	LD	A,H
	CPL
	AND	0FH	;BITS 8-11 => PAGE PART, 12-15 => SEG NUM.
	LD	B,A	; B = UPPER BYTE
	LD	A,L	; LOWER BYTE
	CPL
	LD	C,DMAREG
	OUT	(C),A
	RET
;
; HARD DISK DMA COMMEN PROCEDURE
;
HDCOMO:
	CALL	HDTIME		; START TIME OUT
	CALL	HDDMAT		; TRANSFER
	JP	WTINTR		; WAIT FOR INTERRUPT/READY
;	RET
 
; HARD DISK DMA INOUT
;
; HARD DISK DMA TRANSFER
;
; INPUT		E = INPUT/OUTPUT  IO/CD
;		HL= MEMADR
;		BC= LENGTE
;		D = DMA COMMAND
;
HDDMAT:
	LD	A,E		; ONLY SELECT BITS,NO INTERRUPT
	AND	07		; PERMITTED
 
	XOR	A
	LD	(HDDFLG),A	; CLEAR DMA INT FLAG
	LD	(HDERFL),A	; CLEAR ERROR FLAG
 
 
;			SET INPUT OUTPUT SELECTIE
;			WITH INTERRUPT PERMIT.
	LD	A,E
	OUT	(HDINOT),A
;				; SETUP USE RECORD
	LD	(HDDMUR+MEMADR),HL
	DEC	BC
	LD	(HDDMUR+LENGTH),BC
	LD	A,D
	LD	(HDDMUR+CMD1A),A
;				; FILL DMA+START
	LD	C,HDDMDV	; DMA DEVICE ADRES
	LD	B,HDDMUL	; LENGTE
	LD	HL,HDDMUR
 
	OTIR
	RET
 
;
;
; START TIME OUT
;
; HL,BC,DE NIET VERANDEREN !!!!!!!!
HDTIME:
	XOR	A
	LD	(TIMFLG),A
	LD	A,0C7H		; INT, COUNTER ,TIME NEXT
	OUT	(HDCT3D),A
	LD	A,(INDRBL+TIMFAC)
	OUT	(HDCT3D),A
	RET
 
; WAIT PROCEDURE
;
; WAIT FOR INTERRUPT
;		,TIME OUT
;		,ERROR REPORT
;
;
WTINTR:
 
	LD	A,(HDDFLG)	; DMA FLAG
	AND	A
	RET	NZ		; C=0 => OKE
 
	LD	A,(HDERFL)	; ERROR FLAG
	AND	A
	JP	NZ,WTINT1
 
	LD	A,(TIMFLG)
	AND	A
	JP	Z,WTINTR	; TIME OUT ERROR
WTINT1:
	SCF
	RET
 
 
; SELECT DISK
;
; HARD DISK SELECT
;
;	INPUT:	PHUNIT	= UNIT NUMMER
;	OUTPUT:	HDSTT	= CURRENT STATUS
;		C=0	  OKE
;		C=1	  ERROR
;
HDSELT:
	LD	A,10
	LD	(HDSRTR),A	;RETRY COUNTER
HDSEL1:
	LD	A,(PHUNIT)	; UNIT NUMMER
	CPL			; SELECTION INVERS
	OUT	(HDSLDR),A	; FILL DATA REGISTER
	OUT	(HDSLTD),A	; SELECT DEVICE ADRES
	IN	A,(HDSTAD)	; STATUS DEVICE ADRES
	LD	(HDSTT),A
	AND	1		; BUSY BIT
	RET	Z		; Z=0 C=0
	LD	A,(HDSRTR)
	DEC	A
	JR	Z,HDSEL2
	LD	(HDSRTR),A
	JR	HDSEL1
HDSEL2:
	SCF
	RET
 
;
; CHECK STATUS
;
; CHECK STATUS
;		INPUT: D = REQUESTED STATUS
;
HCHKST:
	IN	A,(HDSTAD)	; HD STATUS
	LD	(HDSTT),A
	BIT	4,A		; REQ BIT = OKE = 0
	JP	NZ,HCHKS1	; NOT YET. WAIT FOR IT
	AND	0FH		; TEST REST OF STATUS
	CP	D		; COMMAND INPUT ?
	RET	Z		; OKE EXIT
HCHKSX:
	SCF			; ERROR EXIT
	RET
HCHKS1:
	XOR	A		; A:= 0
	LD	(HDERFL),A	; CLEAR ERROR REPORT FLAG
	LD	(HDDFLG),A	; AND DMA FLAG FOR TIME OUT PROCEDURE
	CALL	HDTIME		; START TIME OUT 
	LD	A,IOPIRC+IOPIBC	; WAIT FOR REQ=TRUE,DB0=0,DB5=1
				; OR FOR BUSY=FALSE, DB4=1
	OUT	(HDINOT),A
	CALL	WTINTR		; GO WAIT
	LD	A,(HDERFL)	; CHECK INTERRUPT CAUSE
	AND	A
	JP	Z,HCHKSX	; ERROR, TIMEOUT
	JP	HCHKST		; SOFAR OKE, REPEAT CHECK
; ERROR PROCEDURE
;
;
;
;
; ERROR PROCEDURE, Try to flush contilloer buffer until busy
;                  is in actif,else reset controler
;
HDERRP:
	LD	A,(ERFLAG)
	AND	A
	SCF
	RET	NZ		;NOREPEAT IN STARTUP PROCEDURES
	CALL	HERFLS		;FLUSH BUFFE
	RET	NC
	CALL	INIDRV		;TRY WITH RESET
	RET
 
;
; FLUSH BUFFER, FOR INPUT AND OUTPUT,
; YUST BY READING DATA.
;
HERFLS:
	PUSH	HL		; SAVE HL
	LD	HL,5000		; MAX NUMBER OF TRANSFERS
HERFL1:
	IN	A,(HDSTAD)	; DON'T WAIT FOR REQ.
	AND	1		; TEST BUSY BIT
	JR	NZ,HERFLX	; OKE, EXIT
	IN	A,(HDDTDV)	; READ DATA, GIVE ACK.
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,HERFL1
	SCF			; OUT OF LIMMIT
HERFLX:
	POP	HL
	RET
; SETUP
;
;
;
; SETUP DRIVE INITIATIE
;			COPY TABLE AND TIME OUT
;
;
SETUPD:
	LD	HL,(PTRINI)	; POINTER NAAR INIT TABLE
	LD	DE,INDRBL	; INITIATIE DRIVE BLOCK
	LD	BC,11
	LDIR
 
	RET
;
; LOGICAL ADDRESS TRANS FORMATION
;
LGTRAN:
	LD	A,(HDRVUN)
	SLA	A
	SLA	A
	SLA	A
	SLA	A
	SLA	A
	AND	20H
	LD	D,A
	LD	HL,(FDCTRK)
	XOR	A		; A:=0
 
	ADD	HL,HL		; *2
	ADC	A,0
	ADD	HL,HL		; *4
	ADC	A,0
	ADD	HL,HL		; *8
	ADC	A,0
	ADD	HL,HL		; *16
	ADC	A,0
	ADD	HL,HL		; *32
	ADC	A,0
	AND	1FH
	OR	D
	LD	(DCBBLK+LOGADH),A
	LD	A,H
	LD	(DCBBLK+LOGADM),A	; MID ADDRESS
	LD	A,(HDSECT)	; SECTOR 1-32 -- 1-16
	DEC	A
	AND	1FH		; FOR 1-32
	ADD	A,L
	LD	(DCBBLK+LOGADL),A	;LOW ADDRESS
	RET
 
;
DMINI:
	LD	HL,HDDMVC
	LD	A,L
	LD	(HDDINV),A

	LD	HL,HDDINI	; INIT BLOCK
	LD	C,HDDMDV	; DEVICE ADDRESS
	LD	B,HDDINL	; LENGTE
	OTIR
;
; VUL USE RECORD
;
	LD	HL,HDINUR	; USE RECORD
	LD	DE,HDDMUR	; RAM RECORD
	LD	BC,HDDMUL	; LENGTE
	LDIR
	RET
;
CTCINI:
	LD	HL,HDCTVC
	LD	A,L
	OUT	(HDCT0D),A
;
;CTC0 ERROR REPORT
;
;
; CTC0 INTERRUPT ON POS EDGE
;
	LD	A,0D7H	;INT ,COUNTER,POS EDGE,TIME CONSTANT
	OUT	(HDCT0D),A
	LD	A,1	; TIME CONSTANT = 1
	OUT	(HDCT0D),A
 
;
; CTC1 TIMER MODE,PRESCALE=256,TIME CONSTANT = 256
;
	LD	A,27H
	OUT	(HDCT1D),A
	LD	A,0FFH	;TIME CONSTANT
	OUT	(HDCT1D),A		; OUTPUT PULSE = 16.344 Usec.
	LD	A,47H			; NO INT,COUNTER,TIME NEXT
	OUT	(HDCT2D),A
	LD	A,0FFH			; TIME WORD
	OUT	(HDCT2D),A		; UNIT = 4 SEC.
;
; CTC3 VULLEN IN TIME OUT PROC
;
	RET
; INTERRUPT PROC
 
HDMAIP:
	PUSH	AF
	LD	A,0A3H	; RESET DMA
	LD	(HDDFLG),A
HDIEX:				; RESET AND INTERRUPT EXIT
	LD	A,0A3H		;RESET DMA
	OUT	(HDDMDV),A
	LD	A,43H
	OUT	(HDCT3D),A	; RESET TIME OUT
	XOR	A	; A:= 0
	OUT	(HDINOT),A	; PREVENT ERROR REPORT INTERRUPTS
 
	POP	AF
	EI
	RETI
;
; CTC 0 INTERRUPT, ERROR REPORT
;
HDCT0I:
	PUSH	AF
	LD	A,ERRREP
	LD	(HDERFL),A
	JP	HDIEX		; RESET,AND EXIT
;
HDCT1I:
	EI
	RETI
;
HDCT2I:
	EI
	RETI
;
; TIME OUT INTERRUPT
;
HDCT3I:
	PUSH	AF
	LD	A,TIMCOD	; TIME OUT FLAG CODE
	LD	(TIMFLG),A
	JP	HDIEX		; RESET,AND EXIT
;
 
; CONSTANTEN
;
HDDINL	EQU	18	; LENGTE 
HDDINI:
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H	; 6* RESET
	DEFB	1	; WRG0 LOAD VIA B->A,FIXED ADRES
	DEFB	54H	; WRG1 A=MEM A=INCREMENT TIME BYTE FOLLOWS
	DEFB	0CAH	;CYCLE LENGT = 2, IORQ END EARLY
	DEFB	68H	; WRG2 B=IO  B=FIXED TIME BYTE 
	DEFB	0CDH	; CYCLE LENGTH = 3
	DEFB	80H	; WRG3
	DEFB	0D5H	; WRG4 NEXT=PORT B,ICB: BURST MODE !!
	DEFB	HDDTDV	; HARD DISK DATA DEVICE ADRES
	DEFB	12H	; ICB, INT ON EOB,NEXT INT VEC
HDDINV:	DEFB	0
	DEFB	82H	; WRG5 INT ON EOB, RDY ACTIV LOW
	DEFB	0CFH	; LOAD
 
;
; HARD DISK DMA USE RECORD
;
HDDMUL	EQU	8	; LENGTE
HDINUR:
	DEFB	0	; COMMAND CMDA1
	DEFW	0	; MEM ADR
	DEFW	0	; LENGTE
	DEFB	0CFH	; LOAD
	DEFB	0ABH	; ENABLE INTERRUPT
	DEFB	87H	; ENABLE DMA
;
;*
;*

HDINVC:
HDSECT:	DEFS	1
 
DCBBLK:	DEFS	6
DCB0	EQU	0
DCB1	EQU	1
DCB2	EQU	2
DCB3	EQU	3
DCB4	EQU	4
DCB5	EQU	5
 
HDCOMD:	DEFS	1
HDDCMD:	DEFS	1
HDLEIN:	DEFS	1
TIMFLG:	DEFS	1
HDDFLG:	DEFS	1
 
HDDMUR:	DEFS	8
CMD1A	EQU	0
MEMADR	EQU	1
LENGTH	EQU	3
LOAD	EQU	5
ENAINT	EQU	7
 
HDSRTR:	DEFS	1
TSDRTR:	DEFS	2
 
INDRBL:	DEFS	11
INDRV0	EQU	0
INDRV1	EQU	2
INDRV2	EQU	3
INDRV3	EQU	5
INDRV4	EQU	7
TIMFAC	EQU	8
OPTBYT	EQU	9
 
HDSTAT:	DEFS	2
HDSTA1	EQU	0
HDSTA2	EQU	1
 
HDIOCM:	DEFS 	1
 
HDSTT:	DEFS	1
PTRINI:	DEFS	2
HDERFL:	DEFS	1
HDOPT:	DEFS	1
HDRETR:	DEFS	1  
ERFLAG:	DEFS	1
HDOWNB:	DEFS	2
HDSBAS:	DEFS	2
HDSLEN:	DEFS	2
HDSADR:	DEFS	2
HDSHDC:	DEFS	1
HDRVUN:	DS	1
HDHCMD:	DEFS	1
	END
