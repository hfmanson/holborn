;	HOLBORN DISC IO FOR CP/M 2.2
;		WITH DENSITY REPORTING
;
; EDIT	HB	10031982
;		153 TRACKS
;	HB	1-6-1982
;		COMMEN INT PART
;		8-6-1982   SETTRG
;

; CP/M FDC PART BIOS
;
	.Z80

;
;
; GLOBALPROCEDURES
;
	GLOBAL	FLINIT
	GLOBAL	FLREAD
	GLOBAL	FLWRITE
	GLOBAL	FLHOME
	GLOBAL	FICTC0
	GLOBAL	FICTC1
	GLOBAL	FICTC2
	GLOBAL	FICTC3
	GLOBAL	FIDMAF
;
;
; GLOBAL DATA
;
	GLOBAL	FDCLEN
	GLOBAL	FDCADR
	GLOBAL	FDCBAS
	GLOBAL	FDCDEN
	GLOBAL	PHUNIT		; PHYSICAL UNIT
	GLOBAL	FDCTRK
	GLOBAL	FDCSEC
	GLOBAL	FTRKUN
	GLOBAL	PTRKUN

;
; EXTERNALS
;
	EXTRN	HSTWRT
	EXTRN	HSTACT
	EXTRN	DPBASE
	EXTRN	F_CTCV
	EXTRN	F_DMAV

; DMA COMMAND RECORD EQUATES
;
CMD1A	EQU	0	; BYTE		COMMAND CODE
MEMADR	EQU	1	; WORD
LENGTH	EQU	3	; WORD
CMD2D1	EQU	5	; BYTE		LOAD COMMAND
CMD2D2	EQU	6	; BYTE		ENABLE INTERRUPT
CMD2D3	EQU	7	; BYTE		ENABLE DMA
 
;
; FDC COMMAND RECORD EQUATES
;
 
FCMDCOD	EQU	0	; COMMAND CODE
FCUNIT	EQU	1	; HEAD + UNIT NUMMER
FCTRK	EQU	2	; TRACK
FCHD	EQU	3	; HEAD
FCSEC	EQU	4	; SECTOR
FCBSC	EQU	5	; BYTES/SECTOR CODE
FCEOT	EQU	6	; EOT SECTOR
FCGAP	EQU	7	; GAP LENGTH
FCLNG	EQU	8	; LENGTE
 
 
;
; FDC RESULTBUFFER EQUATES
;
 
FDST0	EQU	0	; STATUS 0
FDST1	EQU	1	; STATUS 1
FDST2	EQU	2	; STATUS 3
FDTRACK	EQU	3
FDHEAD	EQU	4
FDSECTO	EQU	5
FDBYTE	EQU	6
 
SUBTTL FDC COMMAND CODES
 
; 
; FDC COMMAND CODE
;
 
SKCODE	EQU	00FH	; SEEK CODE
RDCODE	EQU	006H	; READ CODE MF=1 SK=1
WRCODE	EQU	005H	; WRITE CODE "     "
SK0COD	EQU	007H	; SEEK 0 CODE (RECALIBRATE)
SICODE	EQU	008H	; SENSE INTERRUPT STATUS
SPECOD	EQU	003H	; SPECIFY CODE
FCMDD	EQU	04DH	; FORMAT DOUBLE DENSITY
FCMSD	EQU	00DH	; FORMAT SINGLE DENSITY
READID	EQU	00AH	; READ ID CODE
;
; FDC CONSTANTEN
;
 
 
SRT	EQU	0D0H	; STEP RATE =3 MSEC.
HUT	EQU	0	; HEAD UNLOADTIME = MAX
HLT	EQU	032H	; HEAD LOADTIME = 50 MSEC.
NDN	EQU	000H	; DMA MODE
SIDE0	EQU	0
SIDE1	EQU	1
 
 
UNIT0	EQU	0
UNIT1	EQU	1
UNIT2	EQU	2
UNIT3	EQU	3
 
SUBTTL
 
WR6LOAD	EQU	0CFH	; LOAD COMMAND
WR6EIN	EQU	0ABH	; ENABLE INTERRUPT
WRG6IR	EQU	0A7H	; INITIEER READ DMA REGISTERS
 
DMAINP	EQU	079H	; B=IO  ==>  A=MEM
DMAOUT	EQU	07DH	; A=MEM ==>  B=IO
DMASCR	EQU	07EH	; A=MEM SEARCH
 
 
BIT0	EQU	01H
BIT1	EQU	02H
BIT2	EQU	04H
BIT3	EQU	08H
BIT4	EQU	10H
BIT5	EQU	20H
BIT6	EQU	40H
BIT7	EQU	80H
 
TRKUN0	EQU	0
TRKUN1	EQU	2
TRKUN2	EQU	4
TRKUN3	EQU	6
 
NDISK	EQU	2
MFMBIT	EQU	40H
;
; DEVICE ADDRESS
;
CT0DEV	EQU	08H	; CTC 0 
CT1DEV	EQU	0AH	; CTC 1  !!!!
CT2DEV	EQU	09H	; CTC 2  !!!!
CT3DEV	EQU	0BH	; CTC 3
 
FDSTAT	EQU	18H
FDCDAT	EQU	19H
 
DMAREG	EQU	4
 
DENDEV	EQU	28H	; DENSITY SELECTION (HARDWARE)
 
DMADEV	EQU	14H
SUBTTL
;
; FLOPPY INITIATIE
;
FLINIT:
	CALL	FTRKIN		; INITIATE TRACK POS.
	CALL	FSPECP		; SPECIFY FLOPPY TYPE
	DI			; DISABLE INTERRUPT
	CALL	FDMAIN		; DMA INITIATIE
	CALL	FCTCIN		; CTC INITIATIE
	CALL	FSINTS		; SENSE FDC INTERRUPT
	EI
 
	LD	HL,FTRKUN+TRKUN0	; ADDRESS TRACK-UNIT 0
	LD	(PTRKUN),HL
 
 
 
	RET
SUBTTL
;
; READ COMMAND
;
;		OUTPUT: A-REG = 0	NO ERRORS
;			A-REG =/ 0	ERROR CONDITION OCCURRED
;
FLREAD:
	LD	A,RDCODE		; FDC READ CODE (MFM = 0)
	LD	(FDCCMD),A
 
	LD	A,DMAINP		; IO ==> MEM, B==>A CODE FOR DMA
	LD	(FDMAUR+CMD1A),A
 
	JP	FRWPROC
 
;
; WRITE COMMAND
;		LIKE READ
 
FLWRITE:
	LD	A,WRCODE		; FDC WRITE CODE (MFM=0)
	LD	(FDCCMD),A
 
	LD	A,DMAOUT		; MEM ==> IO , A==>B CODE FOR DMA
	LD	(FDMAUR+CMD1A),A
 
	JP	FRWPROC
 
;
; FLOPPY READ WRITE PROCEDURE
;
;	IF ERROR THEN
;		     RETRY FOR DOUBLE AND SINGLE DENSITY
;
FRWPROC:
	LD	A,10
	LD	(FRETRY),A		; RETRY COUNTER
 
FRWPR0:	CALL	FSEEKT			; SEEK TO REQUESTED TRACK
	JP	C,FRWPRE
 
	CALL	FDMABLK			; FILL DMA COMMAND BLOK
	LD	A,0CCH			; LENGTH ERROR
	RET	C
FRWPR1:
	XOR	A		; A:= 0
	LD	(F_FDCF),A	; RESET FLOPPY FLAG
	CALL	FDCBLK			; FILL FDC COMMAND BLOK
	CALL	FDMSEN			; SEND DMA COMMAND BLOK TO THE DMA
	CALL	FDCOUT			; SEND FDC COMMAND BLOK TO THE FDC
	CALL	TIMEOUT			; START TIME OUT COUNTER
;
; WAIT FOR INTERRUPT OR TIME OUT
;
	CALL	WTINTR
 
	LD	A,55H			; TIME OUT ERROR
	PUSH	AF			; SAVE CODITIE CODE
 
	CALL	CHKTOT		; CHECK TIME OUT ,AND INPUT
 
	POP	AF			; RESTORE CONDITION CODE
	RET	C
 
	LD	A,(FDCBUF+FDST0)	; FDC STATUS 0
	LD	B,A
	AND	BIT7+BIT6		; OKE ?
	RET	Z			; A=0 ,NORMAL TERMINATION
;
; ERROR CONDITION
;
 
	LD	A,B
	AND	0F8H			; 11111000
	CP	40H			; 01000ddd
	JR	NZ,FRWPRE		; NO RETRY
 
	LD	A,(FDCBUF+FDST1)
	AND	092H			; 10010010
	JR	NZ,FRWPRE		; NO RETRY
 
	LD	A,(FDCBUF+FDST2)
	AND	040H			; 01000000
	JR	NZ,FRWPRE		; NO RETRY
;
	LD	A,(FRETRY)
	CP	10
	JR	NZ,FRWRET		; RETRY FASE
;
; READ ID FOR SWITCHED DENSITY
;
	CALL	FLHOME
	RET	C		; ERROR
	XOR	A
	LD	(F_FDCF),A		; CLEAR FDC INT FLAG
 
	LD	A,(FDCDEN)		; CHECK DENSITY
	AND	A			; 0 = DOUBLE DENSITY
	JR	NZ,FRWDD0		; DOUBLE
	LD	D,0			; SINGLE DENSITY FDC COMMAND BIT
	LD	A,1			; HARDWARE DENSITY SELECT CODE
	JR	FRWSD0
FRWDD0:
	LD	D,MFMBIT		; DOUBLE DENSITY BIT
	LD	A,0			; HARD WARE DENSITY SELECT CODE
FRWSD0:
	OUT	(DENDEV),A		; SELECT CORRECT DENSITY
	LD	A,READID		; FDC READ ID COMMAND CODE
	OR	D
	CALL	FD1OUT			; SEND IT TO FDC
	LD	A,(PHUNIT)		; FETCH UNIT NUMMER
	CALL	FD1OUT			; SEND IT TO FDC
	CALL	TIMEOUT			; START  TIME OUT
;
; WAIT FOR INTERRUPT FROM FDC OF TIMER
;
	CALL	WTINTR
	LD	A,55H			; TIME ERROR CODE
	PUSH	AF			; SAVE CONDITION CODE
	CALL	FDCIN			; INPUT FDC STATUS WORDS
	POP	AF			; RESTORE CONDITION CODE
	RET	C			; TIME OUT ERROR
	LD	A,(FDCBUF+FDST0)	; CHECK STATUS 0 IF OKE
	AND	BIT7+BIT6
	LD	A,0DDH			; DENSITY SWITCH ERROR CODE
	RET	Z
	LD	A,(FRETRY)		; ENTER RETRY FASE
FRWRET:
	DEC	A
	JR	Z,FRWPRE		; EXIT
	LD	(FRETRY),A
	CALL	FLHOME			; RE-CALIBRATE
	RET	C			; HOME ERROR
	JP	FRWPR0
 
FRWPRE:					; ERROR EXIT
	LD	A,(FDCBUF+FDST0)
	RET
 
;
; HOME COMMAND , SEEK CURRENTLY SELECTED DISK (UNIT) TO TRACK ZERO. (RECALIBRATE)
;
FLHOME:
	CALL	SETTRG
	XOR	A		; A := 0
	LD	(F_FDCF),A
	LD	A,SK0COD	; RECALIBRATE COMMAND CODE
	CALL	FD1OUT
	LD	A,(PHUNIT)
	CALL	FD1OUT
	CALL	TIMEOUT
;
; WAIT FOR INTERRUPT
;
	CALL	WTINTR
	LD	A,22H		; ERROR CODE
	PUSH	AF		; SAVE A EN F
	LD	IX,(PTRKUN)	; POINTER TO TRACK UNIT ADDRESS
	JP	C,HOME1
	LD	(IX),0
	LD	(IX+1),0
	JP	HOME2
HOME1:
	LD	(IX),0FFH
	LD	(IX+1),0FFH
HOME2:
; CHECKING FOR BLOCKING DEBLOCKING
	LD	A,(HSTWRT)
	OR	A
	JR	NZ,HOMED
	LD	(HSTACT),A

HOMED:
	POP	AF
	RET
 
SUBTTL
;
; TRACK TRANSLATE FOR DOUBLE DENSITY ONLY
;       FDCTRK/2=> PHYSICAL TRACK
;       REST=> HEAD
;
TRKTRAN:
	LD	A,(FDCDEN)	; CHECK DENSITY
	AND	A		; 0=DOUBLE
	JR	Z,TRKTR1	; DOUBLE DENSITY
	LD	A,(FDCTRK)	; REQUESTED TRACK
	LD	(F_TRK),A	; PHYSICAL TRACK
	XOR	A		; A:=0
	LD	(F_SID),A	; SIDE (HEAD) = 0
	RET
TRKTR1:
	LD	A,(FDCTRK)	; REQUESTED TRACK
	SRL	A		; TRK/2,CY= BIT 0
	LD	(F_TRK),A	; PHYSICAL TRACKL
	RL	A		; BIT 0 = CY
	AND	1		; ONLY BIT 0
	LD	(F_SID),A	; CORRECT SIDE 
	RET
;
; SEEK TO FDCTRK
;
FSEEKT:
	CALL	SETTRG
	CALL	TRKTRAN		; TRACK TRANSLATE
	LD	HL,(PTRKUN)	; POINTER TO TRACK UNIT ADDRESS
	LD	A,(HL)		; CURRENT TRACK
	AND	A		; 0FFH ==> NOT INTIATED
	JP	P,FSEEK1
	CALL	FLHOME		; RECALIBRATE
	LD	HL,(PTRKUN)	; POINTER TO TRACK UNIT ADDRESS
FSEEK1:
	LD	A,(F_TRK)	; PHYSICAL TRACK
	CP	(HL)		; CURRENT TRACK is the  SAME ?
	RET	Z		; YES, CY = 0 (oke)
	XOR	A		; A:= 0
	LD	(F_FDCF),A	; RESET FLOPPY FLAG
	LD	A,SKCODE	; FDC SEEK COMMAND CODE
	CALL	FD1OUT		; COMMAND TO FDC
	LD	A,(PHUNIT)	; UNIT NUMBER
	CALL	FD1OUT
	LD	A,(F_TRK)	; REQUESTED TRACK NUMBER
	CALL	FD1OUT
 
	CALL	TIMEOUT		; START TIME OUT
;
; WAIT FOR INTERRUPT-FDC OR TIME OUT
;
	CALL	WTINTR
	LD	IX,(PTRKUN)	; POINTER TO TRACK UNIT ADDRESS
	JP	NC,FSEEK3	; NO TIME OUT ERROR
FSEEK2:
	LD	(IX),0FFH	; ERROR EXIT,NOT INITIATED CODE
	LD	(IX+1),0FFH
 
	SCF
	RET
 
FSEEK3:
	LD	A,(FDCBUF+FDST0); TEST FDC STATUS
	AND	BIT7+BIT6
	JP	NZ,FSEEK2	; ERROR 
 
	LD	A,(F_TRK)	; REQUESTED TRACK
	LD	(IX),A
	AND	A		; C := 0
	RET
;*
;* SET TRACK REGISTER POINTER 
;*
;
SETTRG:
	LD	A,(PHUNIT)
	LD	L,A
	LD	H,0		;H:=PHYSICAL UNIT
;
; COMPUT PROPER TRACK UNIT POINTER
;
	ADD	HL,HL
	LD	DE,FTRKUN	;PARAMETER BLOCK ADDRESS
	ADD	HL,DE
	LD	(PTRKUN),HL	; STORE POINTER
	RET
;
 
;
; WAIT FOR INTERRUPT
;
WTINTR:
	LD	A,(F_FDCF)	; FDC INTERRUPT FLAG
	AND	A		; TEST A,C:=0
	RET	NZ		; FDC INTERRUPT HAS OCCUURRED
	LD	A,(F_TIMF)	; TIME OUT FLAG
	AND	A
	JR	Z,WTINTR
	SCF			; CY := 1, TIME OUT ERROR
	RET 
;
;
; TIME OUT
;	COUNTER CHANNEL3,DRIVEN BY  CHAN 1 (APPROC. 10 MSEC)
;	COUNT 15*160 MSEC = 240 * 10 MSEC
;
TIMEOUT:
	XOR	A		; A := 0
	LD	(F_TIMF),A	; RESET TIME OUT FLAG
 
	LD	A,0DFH		; COUNTER MODE,DEC-LEDING EDGE,INT ENABLE
	OUT	(CT3DEV),A	;TIME CONSTANT NEXT
	LD	A,241		; TIME CONSTANT
	OUT	(CT3DEV),A
 
	RET
SUBTTL
;
; FILL DMA BLOK
; AND BASE SEGMENT REGISTER
;
FDMABLK:
	LD	HL,(FDCADR)	; MEMORY ADDRESS
	LD	(FDMAUR+MEMADR),HL
 
	LD	HL,(FDCLEN)	; LENGTE
	LD	A,H
	OR	L
	SCF
	RET	Z		; ERROR LENGTH = ZERO
	DEC	HL
	LD	A,H
	OR	L
	SCF
	RET	Z		; ERROR LENGTH = EEN
	LD	(FDMAUR+LENGTH),HL
 
;
; FILL BASE (SEGMENT) REGISTER
;
 
FBASRG:
	LD	HL,(FDCBAS)	; BASE VALUE
	LD	A,H
	CPL
	AND	03H		; SEGMENT REGISTER (7654=0000)
	LD	B,A		; UPPER BYTE
	LD	A,L		; LOWER BYTE
	CPL
	LD	C,DMAREG
	OUT	(C),A		; FILL DMA SEGMENT REGISTER
 
	AND	A		; C:= 0
	RET
;
; FILL FDC BLOK
;
FDCBLK:
	LD	A,(F_SID)
	AND	1		; HEAD
	LD	(FDCURC+FCHD),A
	SLA	A
	SLA	A
	LD	B,A
	LD	A,(PHUNIT)	; UNIT(DISK) NUMBER
	ADD	A,B
	LD	(FDCURC+FCUNIT),A
 
	LD	A,(F_TRK)	; TRACK NUMBER
	LD	(FDCURC+FCTRK),A
 
	LD	A,(FDCSEC)	; SECTOR NUMBER
	LD	(FDCURC+FCSEC),A
 
	LD	A,(FDCDEN)	; DENSITY ?
	AND	A		; 0= DOUBLE DENSITY
	LD	A,(FDCCMD)	; FDC COMMAND CODE
	JP	Z,FDCBLD	; DOUBLE DENSITY
;
; SINGLE DENSITY
;
FDCBLS:
	LD	HL,FSINDT	; SINGLE DENSITY TABLE
	LD	D,1		; SINGLE DENSITY SELECT CODE
	JP	FDCBLC
;
; DOUBLE DENSITY
;
FDCBLD:
	LD	HL,FDUBDT	; DOUBLE DENSITY TABLE
	LD	D,0		; DOUBLE DENSITY SELECT CODE
	OR	MFMBIT		; FDC COMMAND CODE MFM BIT
FDCBLC:
	LD	(FDCURC+FCMDCOD),A
	LD	A,D
	OUT	(DENDEV),A	; SELECT DENSITY (HARD WARE SELECTION)
 
	LD	BC,4
	LD	DE,FDCURC+FCBSC	;
	LDIR			; COMPLETE FDC COMMAND TABLE
	RET
;
; SEND DATA TO DMA
;
FDMSEND:
	LD	HL,FDMAUR	; DMA USE RECORD
	LD	C,DMADEV
	LD	B,8		; USE RECORD LENGTH
 
	OTIR
 
	RET
SUBTTL FDC IN/OUT-PUT SUBROUTINES
;	FROM	REG.	A
;
;
FD1OUT:
	LD	C,A
	CALL	FDST10	;CHECK	OUTPUT	STATUS
	LD	A,C
	OUT	(FDCDAT),A
	RET
;
;INPUT	ONE	BYTE	FROM	FDC	
;	INTO	REG	A
;
FD1IN:
	CALL	FDST11	;CHECK	INPUT	STATUS
	LD	A,(IX)		;19T DUMMY
	LD	A,A		;4T  DUMMY
	IN	A,(FDCDAT)
	RET
;
;READ RESULT/PHASE WORDS FROM FDC
;
FDCIN:
	LD	HL,FDCBUF	;BEGINADDRESS
	LD	B,7	;LENGTH
	LD	C,FDCDAT
FDCIN1:
	CALL	FDST11	;CHECK	READ	STATUS
	LD	A,(IX)		; 19T  DUMMY
	LD	A,A		;  4T  DUMMY
	INI
	JR	NZ,FDCIN1
	RET
	
;
;
;
; OUTPUT HET FDC COMMAND BLOK
;
FDCOUT:
	LD	HL,FDCURC	;BEGIN	ADDRESS FDC COMMAND RECORD
	LD	B,9	;LENGTH
	LD	C,FDCDAT
FDCOU1:
	CALL	FDST10	;CHECK	WRITE	STATUS
	OUTI
	JR	NZ,FDCOU1
	RET
 
SUBTTL CHECK FDC-STATUS FOR READ WRITE
;
;CHECK WRITE FDC WORDS STATUS
;
FDST10:
	LD	D,7FH
FD10ST:
	IN	A,(FDSTAT)
	AND	BIT7+BIT6
	CP	BIT7
	JR	Z,FDOT10
	LD	A,(0)		; 13T  DUMMY
	DEC	D
	JP	NZ,FD10ST
FDOT10:
	LD	A,(0)		; 13T  DUMMY
	LD	A,A		; 4T   DUMMY
	RET
	
;
;CHECK	READ	FDC	WORDS	STATUS
;
FDST11:
	LD	D,7FH
FD11ST:
	IN	A,(FDSTAT)
	AND	BIT7+BIT6
	CP	BIT7+BIT6
	RET	Z
	NEG			; 8T DUMMY
	LD	A,0		; 7T DUMMY
	DEC	D
	JP	NZ,FD11ST
	RET
;
; SENSE AN FDC INTERRUPT, COUSED BY "READY"
;
FSINTS:
	LD	A,SICODE	; SENSE INTERRUPT COMMAND CODE
	CALL	FD1OUT		; OUTPUT TO FDC
	CALL	FD1IN		; INPUT FROM FDC
	CP	80H		; INVALLID COMMAND
	RET	Z
	CALL	FD1IN		; IN CASE OF INTERRUPT
	RET
 
;
; INITIATION OF TRACK-POSITIONS, 0FFFFH IS not-initiated
;
FTRKIN:
	LD	HL,0FFFFH
	LD	(FTRKUNT+TRKUN0),HL
	LD	(FTRKUNT+TRKUN1),HL
	LD	(FTRKUNT+TRKUN2),HL
	LD	(FTRKUNT+TRKUN3),HL
	RET
 
;
; SPECIFY FDC INITIAL VALUES
;
FSPECP:
	LD	A,SPECOD		; SPECIFY COMMAND CODE
	CALL	FD1OUT
	LD	A,SRT+HUT		; STEP RATE + HEAD UNLOAD
	CALL	FD1OUT
	LD	A,HLT+NDN		; HEAD LOAD TIME + DMA MODE
	CALL	FD1OUT
	RET
 
;
; CTC INITIATIE
;
FCTCIN:
	LD	HL,F_CTCV
	LD	A,L
	OUT	(CT0DEV),A
	LD	A,0DFH			; INT ENABLE,COUNTER MODE,DEC,POS EDGE
	OUT	(CT2DEV),A		; TIME CONSTANT NEXT
	LD	A,01			; TIME CONSTANT
	OUT	(CT2DEV),A
;
; INITIATIE CTC1 FOR TIME OUT PULSE 10 Msec
;
	LD	A,027H			; NO INT,TIMER MODE,DEC POS EDGE,
	OUT	(CT1DEV),A		; TIME CONSTANT NEXT
	LD	A,09DH			; TIME CONSTANT
	OUT	(CT1DEV),A
	RET
 
;
; DMA INITIATIE
;
FDMAIN:
	LD	HL,F_DMAV
	LD	A,L
	LD	(FDMAIV),A
	LD	HL,FDMAIB		; START ADDRESS
	LD	C,DMADEV		; DMA DEVICE ADDRESS
	LD	B,FDMIBL		; BLOK LENGTE
 
	OTIR
;
; FILL USE RECORD FOR DMA
;
	LD	HL,FDMAUB		; SOURCE POINTER
	LD	DE,FDMAUR		; DEST POINTER
	LD	BC,FDMUBL		; BLOK LENGTE
 
	LDIR
	RET
 
;
; TIME OUT 10 Msec
;
TIM10M:
	XOR	A		; A := 0
	LD	(F_TIMF),A	; RESET TIME FLAG
 
	LD	A,27H		; STOP CTC1
	OUT	(CT1DEV),A
 
	LD	A,0DFH		; COUNTER MODE,DEC LEDING EDGE,INT ENABLE
	OUT	(CT3DEV),A	;TIME CONSTANT NEXT
	LD	A,1		; TIME CONSTANT, 1*10 Msec
	OUT	(CT3DEV),A
 
	LD	A,09DH		; START 10Msec COUNTER
	OUT	(CT1DEV),A
 
	RET
;
; WAIT FOR TIME OUT ONLY
;
WT10MR:
	LD	A,(F_TIMF)
	AND	A
	JR	Z,WT10MR
	RET
;
; CHECK TIME OUT AND INPUT FDC STATUS
;
CHKTOT:
	JP	C,CHKTO1	; TIME OUT ERROR
	CALL	FDCIN
	RET
CHKTO1:
	CALL	TIMEOUT
	CALL	WTINTR		; WAIT AGAIN
	CALL	TIMEOUT
	CALL	WTINTR		; MAX
;
; FORCE A TERMINAL COUNT
;
	LD	HL,2		; PREPARE INTERRUPT
	LD	(FDMAUR++LENGTH),HL ;D.M.V EEN SEARCH VAN
	LD	(FDMAUR+MEMADR),HL  ;WILLEKEURIGE ADDRESSEN
	LD	A,DMASCR
	LD	(FDMAUR+CMD1A),A
	XOR	A
	LD	(F_DMAF),A	; CLEAR DMA INTERRUPT FLAG
	CALL	FDMSEN		; FILL DMA AND START
CHKTO2:
	LD	BC,800H
CHKTO3:
	LD	A,(F_DMAF)
	AND	A
	JP	NZ,CHKTO4
	CPI
	JP	P,CHKTO3
	RET			; FATAL ERROR
CHKTO4:
	CALL	FDCIN
	RET
 
;
 
;
; CTC 0 INTERRUPT PROCEDURE
;
FICTC0:
	EI
	RETI
;
; CTC 1 INTERRUPT PROCEDURE
;
FICTC1:
	EI
	RETI
 
 
;
; DMA FDC INTERRUPT
;
 
FIDMAF:
 
	PUSH	AF
 
	LD	A,0A3H	;RESET DMA INTERRUPT
	OUT	(DMADEV),A
	LD	(F_DMAF),A	; SET DMA INTERRUPT FLAG
 
	POP	AF
	EI	;ENABLE	INTERRUPT
	RETI
;
;TIME OUT (CTC3) INTERRUPT PROGRAM
;
FICTC3:
	PUSH	AF
	LD	A,43H	;RESET TIME OUT
	OUT	(CT3DEV),A	;TO PREVENT NEXT INTERRUPT
	
	LD	A,55H		; TIME OUT FLAG CODE
	LD	(F_TIMF),A	; SET TIME OUT FLAG
 
	POP	AF
 
	EI
	RETI
	
;
;FDC (CTC2) INTERRUPT PROGRAM
;
FICTC2:
	PUSH	AF
	PUSH	BC
	PUSH	DE
 
;
; CHECK FDC STATUS VOOR INTERRUPT OORZAAK
;
	IN	A,(FDSTAT)	;FDC MAIN STATUS
	AND	BIT7+BIT6+BIT4	;11010000
	CP	BIT7    	;FDC READY VOOR INPUT?
	JP	NZ,FICT21	;GEEN SEEK,SEEK0 OF READY CHANGE INT.
;
; INTERRUPT OORZAAK IS
; SEEK , SEEK0 OF READY CHANGE
; 
; SENSE INTERRUPT STATUS IS NODIG
;
	LD	A,SICODE	;SENSE INTERRUPT STATUS CODE
	CALL	FD1OUT
	CALL	FD1IN    	;INPUT VAN STATUS 0
	LD	B,A
	CALL	FD1IN    	;INPUT VAN PCN
	BIT	5,B     	;SEEK END?
	JP	Z,FICT22	;INT VAN READY CHANGE
;
; INTERRUPT KWAM VAN SEEK OF SEEK0
;
	LD	(FDCBUF+FDTRACK),A
	LD	A,B
	LD	(FDCBUF+FDST0),A
;
; CONTINUE NORMAL INTERRUPT SEQUENSE
;
FICT21:
 
	LD	A,0AAH		; FDC INTERRUPT FLAG CODE
	LD	(F_FDCF),A	; SET FDC FLAG
 
	LD	A,43H		;STOP TIME OUT
	OUT	(CT3DEV),A	;RESET TIME OUT
 
 
FICT22:
	POP	DE
	POP	BC
	POP	AF
 
 
	EI
	RETI
 
SUBTTL
;
;
; DMA INITIATIE BLOK
;
;
FDMAIB:
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H
	DEFB	0C3H		; 6* RESET DMA
	DEFB	014H		; WRG1 A=MEM A=INCREMENT
	DEFB	028H		; WRG2 B=IO  B=FIXED
	DEFB	08AH		; WRG5 STOP ON EOB,CE-ONLY,READY HIGH
	DEFB	095H		; WRG4 NEXT-PORTB-ADR AND ICB,BYTE MODE
	DEFB	FDCDAT		; FDC DATA REGISTER DEVICE ADDRESS
	DEFB	012H		; ICB ,INT ON EOB+INT VEC FOLLOWS
FDMAIV:
	DEFB	0		; INTERRUPT VECTOR
	DEFB	001H		; WRG0 LOAD VIA B==>A,FIXED B-ADR
	DEFB	80H		; WRG3
	DEFB	0CFH		; LOAD B ADDRESS
	DEFB	0BBH		; WRG6 READ MASK FOLLOWS
	DEFB	007H		; STATUS + BYTE COUNT
FDMIBL	EQU	$-FDMAIB
;
; DMA USE BLOK
;
FDMAUB:
	DEFB	079H		; WRG0 B==>A, ADRES LENGTE VOLGT
	DEFW	0		; ADDRESS
	DEFW	0		; LENGTH
	DEFB	0CFH		; LOAD 
	DEFB	0ABH		; ENABLE INTERRUPT
	DEFB	087H		; ENABLE DMA
FDMUBL	EQU	$-FDMAUB
 
;
; SINGLE DENSITY TABLE
;
FSINDT:
	DEFB	0	; BYTE/ SECTOR CODE
	DEFB	26	; EOT (laatste) SECTOR 
	DEFB	07	; READ/WRITE GAP LENGTH
	DEFB	128	; DATA LENGTH/SECTOR
;
; DOUBLE DENSITY TABLE
;
FDUBDT:
	DEFB	03	; BYTE/SECTOR CODE
	DEFB	8	; EOT (laatste) SECTOR
	DEFB	35H	; READ/WRITE GAP LENGTH
	DEFB	1	; DON'T CARE
 
SUBTTL RAM
FDCCMD:	DEFS	1	; READ/WRITE COMMAND CODE
PHUNIT:DEFS	1	; UNIT NUMBER
FDCTRK:	DEFS	2	; TRACK NUMBER
FDCSEC:	DEFS	2	; SECTOR NUMBER
FDCLEN:	DEFS	2	; LENGTH OF DATA BLOK
FDCADR:	DEFS	2	; MEMOMRY ADDRESS
FDCBAS:	DEFS	2	; MEMORY BASE (SEGMENT) 
FDCDEN:	DEFS	1	; DENSITY FLAG, 0=DOUBLE else SINGLE
 
PTRKUN:	DEFS	2	; POINTER TO TRACK-UNIT
FTRKUN:	DEFS	2*4	; TRACK UNIT BLOK WITH CURREND TRACK POSITIONS
FDMAUR:	DEFS	8	; DMA COMAND USE RECORD
FDCURC:	DEFS	9	; FDC COMMAND USE RECORD
FDCBUF:	DEFS	7	; FDC RESULT (STATUS) RECORD
FRETRY:	DEFS	1	; RETRY COUNTER
F_FDCF:	DEFS	1	; FDC INTERRUPT FLAG
F_TIMF:	DEFS	1	; TIME OUT INTERRUPT FLAG
F_DMAF:	DEFS	1	; DMA INTERRUPR FLAG
;
F_TRK:	DEFS	2	; PHYSICAL TRACK
F_SID:	DEFS	1	; PHYSICAL SIDE
;
;*****
;
	END
 
 
